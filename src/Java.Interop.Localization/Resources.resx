<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiXmlAdjuster_0001" xml:space="preserve">
    <value>Warning: method '{0}' in type '{1}' has unnamed parameters.</value>
    <comment>{0} - Java method name.
{1} - Java type name.</comment>
  </data>
  <data name="ApiXmlAdjuster_0002" xml:space="preserve">
    <value>Warning: '{0}' is referenced as base type of '{1}' and expected to have generic type parameters, but it does not.</value>
    <comment>{0}, {1} - Java type names.</comment>
  </data>
  <data name="ApiXmlAdjuster_0003" xml:space="preserve">
    <value>Error while processing Java class '{0}': {1}.</value>
    <comment>{0} - Java class name.
{1} - Exception message.</comment>
  </data>
  <data name="ApiXmlAdjuster_0004" xml:space="preserve">
    <value>Error while processing Java interface '{0}': {1}.</value>
    <comment>{0} - Java interface name.
{1} - Exception message.</comment>
  </data>
  <data name="ApiXmlAdjuster_0005" xml:space="preserve">
    <value>Error while resolving '{0}' in '{1}': {2}.</value>
    <comment>{0} - Java member.
{1} - Java type.
{2} - Exception message.</comment>
  </data>
  <data name="ApiXmlAdjuster_0006" xml:space="preserve">
    <value>Warning: failed to resolve generic constraint: '{0}': {1}.</value>
    <comment>{0} - Java constraint type.
{1} - Exception message.</comment>
  </data>
  <data name="ApiXmlAdjuster_0007" xml:space="preserve">
    <value>For '{0}.{1}', referenced generic arguments count does not match the base type parameters definition.</value>
    <comment>{0} - Java type.
{1} - Java member.</comment>
  </data>
  <data name="ApiXmlAdjuster_0008" xml:space="preserve">
    <value>Type '{0}' was not found.</value>
    <comment>{0} - Java type.</comment>
  </data>
  <data name="ApiXmlAdjuster_0009" xml:space="preserve">
    <value>Internal error: XmlReader should be positioned on attribute, but it is on '{0}'.</value>
    <comment>{0} - XML node type.
The following are literal type names and should not be translated: XmlReader.</comment>
  </data>
  <data name="ApiXmlAdjuster_0010" xml:space="preserve">
    <value>{0}: Element '{1}' requires attribute '{2}'.</value>
    <comment>{0} - File/line/column of error.
{1} - XML element name.
{2} - XML attribute name.</comment>
  </data>
  <data name="ApiXmlAdjuster_0011" xml:space="preserve">
    <value>{0}: EndElement of '{1}' was expected, but is type '{2}' with name '{3}' instead.</value>
    <comment>{0} - File/line/column of error.
{1} - XML element name.
{2} - XML node type.
{3} - XML element name.</comment>
  </data>
  <data name="ApiXmlAdjuster_0012" xml:space="preserve">
    <value>{0}: Unexpected element or content in '{1}': node is '{2}', name is '{3}'. Allowed elements are: '{4}'.</value>
    <comment>{0} - File/line/column of error.
{1} - XML element name.
{2} - XML node type.
{3} - XML element name.
{4} - Allowed XML element names.</comment>
  </data>
  <data name="ApiXmlAdjuster_0013" xml:space="preserve">
    <value>{0}: Element '{1}' has an unexpected attribute: '{2}'. Allowed attributes are: '{3}'.</value>
    <comment>{0} - File/line/column of error.
{1} - XML element name.
{2} - XML attribute name.
{3} - Allowed XML attribute names.</comment>
  </data>
  <data name="Bytecode_0001" xml:space="preserve">
    <value>Could not load .jar entry '{0}': {1}.</value>
    <comment>{0} - Java .jar entry.
{1} - .NET exception.</comment>
  </data>
  <data name="Bytecode_0002" xml:space="preserve">
    <value>Documentation file not found: '{0}'.</value>
    <comment>{0} - File name.</comment>
  </data>
  <data name="Bytecode_0003" xml:space="preserve">
    <value>Failed to match expression '{0}', expected {1} parameter(s) but got {2} parameter(s).</value>
    <comment>{0} - Regex expression.
{1}, {2} - Integer.</comment>
  </data>
  <data name="Bytecode_0004" xml:space="preserve">
    <value>No parameter match for '{0}.{1}'. (expression: '{2}')</value>
    <comment>{0} - Java type.
{1} - Java method.
{2} - Regex expression.</comment>
  </data>
  <data name="Bytecode_0005" xml:space="preserve">
    <value>Unable to parse Kotlin metadata on '{0}': {1}.</value>
    <comment>{0} - Java type.
{1} - Exception.</comment>
  </data>
  <data name="Bytecode_0006" xml:space="preserve">
    <value>Differing number of 'throws' declarations on '{0}{1}'.</value>
    <comment>{0} - Java type name.
{1} - Java type descriptor.
The following are literal names and should not be translated: throws.</comment>
  </data>
  <data name="Bytecode_0007" xml:space="preserve">
    <value>Failed to get parameter names for '{0}.{1}': {2}.</value>
    <comment>{0} - Java type.
{1} - Java method.
{2} - Exception.</comment>
  </data>
  <data name="Bytecode_0008" xml:space="preserve">
    <value>Failed to parse annotation XML file: {0}.</value>
    <comment>{0} - Exception.</comment>
  </data>
  <data name="Generator_BG4000" xml:space="preserve">
    <value>Failed to remove old constants: {0}.</value>
    <comment>{0} - The list of constants that could not be removed.
In this message, the term "constants" refers to class or interface members that have constant values.</comment>
  </data>
  <data name="Generator_BG4100" xml:space="preserve">
    <value>Failed to process enum mapping. Text line: {0}.</value>
    <comment>{0} - The line that could not be processed.</comment>
  </data>
  <data name="Generator_BG4200" xml:space="preserve">
    <value>Error during processing metadata fixup: {0}.</value>
    <comment>{0} - The error encountered.</comment>
  </data>
  <data name="Generator_BG4300" xml:space="preserve">
    <value>Invalid XPath specification: {0}.</value>
    <comment>{0} - The invalid XPath line.</comment>
  </data>
  <data name="Generator_BG4307" xml:space="preserve">
    <value>Target attribute name is not specified for path: {0}.</value>
    <comment>{0} - The invalid XPath line.</comment>
  </data>
  <data name="Generator_BG4400" xml:space="preserve">
    <value>Unexpected 'global::' specification. This error happens if 'global::' is specified in the Metadata.xml transform file, for example.</value>
    <comment>The following are literal names and should not be translated: global::, Metadata.xml.</comment>
  </data>
  <data name="Generator_BG4500" xml:space="preserve">
    <value>'lang-features=default-interface-methods' is not compatible with 'codegen-target=xamarinandroid'.</value>
    <comment>The following are literal command line arguments and should not be translated: 'lang-features=default-interface-methods', 'codegen-target=xamarinandroid'.</comment>
  </data>
  <data name="Generator_BG8101" xml:space="preserve">
    <value>Unexpected class child {0}.</value>
    <comment>{0} - The unexpected child class.</comment>
  </data>
  <data name="Generator_BG8102" xml:space="preserve">
    <value>Class '{0}' has unknown base type '{1}'.</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="Generator_BG8103" xml:space="preserve">
    <value>Class '{0}' has invalid base type '{1}'.</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="Generator_BG8200" xml:space="preserve">
    <value>Failed to parse assembly '{0}': {1}.</value>
    <comment>{0} - Error .NET assembly.
{1} - The error encountered.</comment>
  </data>
  <data name="Generator_BG8300" xml:space="preserve">
    <value>For constructor '{0}', could not find enclosing type '{1}'.</value>
    <comment>{0} - .NET constructor method.
{1} - .NET type.</comment>
  </data>
  <data name="Generator_BG8400" xml:space="preserve">
    <value>Unexpected field type `{0}` ({1}).</value>
    <comment>{0} - .NET type.
{1} - .NET field signature.</comment>
  </data>
  <data name="Generator_BG8401_Method" xml:space="preserve">
    <value>Skipping '{0}.{1}' due to a duplicate method name. (Java type: '{2}')</value>
    <comment>{0} - .NET type.
{1} - .NET field name.
{2} - Java type.</comment>
  </data>
  <data name="Generator_BG8401_NestedType" xml:space="preserve">
    <value>Skipping '{0}.{1}' due to a duplicate nested type name. (Java type: '{2}')</value>
    <comment>{0} - .NET type.
{1} - .NET field name.
{2} - Java type.</comment>
  </data>
  <data name="Generator_BG8401_Property" xml:space="preserve">
    <value>Skipping '{0}.{1}' due to a duplicate field or property name. (Java type: '{2}')</value>
    <comment>{0} - .NET type.
{1} - .NET field name.
{2} - Java type.</comment>
  </data>
  <data name="Generator_BG8402" xml:space="preserve">
    <value>Skipping '{0}.{1}' due to a duplicate field. (Java type: '{2}')</value>
    <comment>{0} - .NET type.
{1} - .NET field name.
{2} - Java type.</comment>
  </data>
  <data name="Generator_BG8500" xml:space="preserve">
    <value>Unexpected child element of '&lt;interface&gt;': '{0}'.</value>
    <comment>{0} - XML element name.
&lt;interface&gt; should not be translated.</comment>
  </data>
  <data name="Generator_BG8501" xml:space="preserve">
    <value>No event name provided in '{0}.{1}'.</value>
    <comment>{0} - .NET type name
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8502" xml:space="preserve">
    <value>Invalidating '{0}' and all its nested types because some of its interfaces were invalid.</value>
    <comment>{0} - .NET type name.</comment>
  </data>
  <data name="Generator_BG8503" xml:space="preserve">
    <value>Invalidating '{0}' and all its nested types because some of its methods were invalid.</value>
    <comment>{0} - .NET type name.</comment>
  </data>
  <data name="Generator_BG8504" xml:space="preserve">
    <value>Event name for '{0}.{1}' is invalid. A valid 'eventName' or 'argsType' can be assigned by adding a rule to the Metadata.xml transforms file.</value>
    <comment>{0} - .NET type name
{1} - .NET member.
The following terms should not be translated: eventName, argsType, Metadata.xml.</comment>
  </data>
  <data name="Generator_BG8506" xml:space="preserve">
    <value>Event property name for '{0}.{1}' is invalid. A valid 'eventName' or 'argsType' can be assigned by adding a rule to the Metadata.xml transforms file.</value>
    <comment>{0} - .NET type name
{1} - .NET member.
The following terms should not be translated: eventName, argsType, Metadata.xml.</comment>
  </data>
  <data name="Generator_BG8600" xml:space="preserve">
    <value>Invalid XML file '{0}': {1}.</value>
    <comment>{0} - File name
{1} - The error encountered.</comment>
  </data>
  <data name="Generator_BG8601" xml:space="preserve">
    <value>No '&lt;package&gt;' elements found.</value>
    <comment>The following terms should not be translated: &lt;package&gt;.</comment>
  </data>
  <data name="Generator_BG8602" xml:space="preserve">
    <value>Unexpected root child node: '&lt;{0}&gt;'.</value>
    <comment>{0} - XML element name.</comment>
  </data>
  <data name="Generator_BG8603" xml:space="preserve">
    <value>Unexpected '&lt;package&gt;' child node: '&lt;{0}&gt;'.</value>
    <comment>{0} - XML element name.
The following terms should not be translated: &lt;package&gt;.</comment>
  </data>
  <data name="Generator_BG8604" xml:space="preserve">
    <value>Could not find top ancestor type '{0}' for nested type '{1}'.</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="Generator_BG8700" xml:space="preserve">
    <value>Unknown return type '{0}' for member '{1}'.</value>
    <comment>{0} - Java type.
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8701" xml:space="preserve">
    <value>Invalid return type '{0}' for member '{1}'.</value>
    <comment>{0} - Java type.
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8800" xml:space="preserve">
    <value>Unknown parameter type '{0}' for member '{1}'.</value>
    <comment>{0} - Java type.
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8801" xml:space="preserve">
    <value>Invalid parameter type '{0}' for member '{1}'.</value>
    <comment>{0} - Java type.
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8A00" xml:space="preserve">
    <value>Metadata.xml element '{0}' matched no nodes.</value>
    <comment>{0} - XML transform. (example: '&lt;remove-node path="/api/package[@name='javax.sql']"')
The following terms should not be translated: Metadata.xml.</comment>
  </data>
  <data name="Generator_BG8B00" xml:space="preserve">
    <value>Unknown generic argument constraint type '{0}' for member '{1}'.</value>
    <comment>{0} - .NET type name
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8C00" xml:space="preserve">
    <value>Could not find base interface '{1}' for type '{0}'.</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="Generator_BG8C01" xml:space="preserve">
    <value>For type '{0}', base interface '{1}' is invalid.</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
</root>